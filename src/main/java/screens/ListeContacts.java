/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package screens;

import core.entities.Contact;
import core.entities.Repertoire;
import core.helpers.enums.ChampRechercheEnum;
import core.helpers.tools.Database;
import core.helpers.tools.EnumsBuilder;
import core.helpers.tools.ErrorMessages;
import core.repositories.AgentRepository;
import core.repositories.EnseignantRepository;
import core.repositories.EtudiantRepository;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.List;

/**
 * @author pacome
 */
public class ListeContacts extends javax.swing.JFrame {

    /**
     * Creates new form MainFrameApplication
     */
    private Repertoire repertoirePrincipal;
    private MainFrameApplication mainFrameApplication;

    public ListeContacts(Connection connection, MainFrameApplication mainFrameApplication) {
        this.mainFrameApplication = mainFrameApplication;
        // reccuperer la liste des contacts en base de donnée.
        AgentRepository agentRepository = new AgentRepository(Database.connection);
        EtudiantRepository etudiantRepository = new EtudiantRepository(Database.connection);
        EnseignantRepository enseignantRepository = new EnseignantRepository(Database.connection);
        repertoirePrincipal = new Repertoire();
        try {
            agentRepository.findAll().stream().forEach(agent -> repertoirePrincipal.ajouterContact(agent));
            enseignantRepository.findAll().stream().forEach(enseignant -> repertoirePrincipal.ajouterContact(enseignant));
            etudiantRepository.findAll().stream().forEach(etudiant -> repertoirePrincipal.ajouterContact(etudiant));
        } catch (SQLException e) {
            // en cas d'erreur on afficher et on ouvre pas l'application. Elle se referme
            showError("Erreur de base de donnée", ErrorMessages.SQLErrorMessage);
            return;
        }
        repertoirePrincipal.sort(ChampRechercheEnum.CODE);
        initComponents();
        cancelSearch.setVisible(false);
        loadTableContent(repertoirePrincipal.getContacts());

    }

    private void showError(String title, String message) {
        JOptionPane.showConfirmDialog(new JFrame(), message, title, JOptionPane.ERROR_MESSAGE);
    }

    private static void showErrorStatic(String title, String message) {
        JOptionPane.showConfirmDialog(new JFrame(), message, title, JOptionPane.ERROR_MESSAGE);
    }

    private void loadTableContent(List<Contact> contacts) {
        DefaultTableModel tableModel = new DefaultTableModel();
        tableModel.addColumn("Code");
        tableModel.addColumn("Nom");
        tableModel.addColumn("Date de Naissance");

        tableModel.addColumn("Telephone");
        tableModel.addColumn("Email");
        tableModel.addColumn("Adresse");

        contacts.stream()
                .forEach(contact -> tableModel.addRow(new Object[]{contact.getCode(), contact.getNom(), contact.getDateNaissance().toString(), contact.getTelNumber(), contact.getEmail(), contact.getAddress()}));

        jTable1.setModel(tableModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        label15 = new java.awt.Label();
        creerRepertoire = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        searchOption = new javax.swing.JComboBox<>();
        creerRepertoire1 = new javax.swing.JButton();
        cancelSearch = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        searchField.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        searchField.setMinimumSize(new java.awt.Dimension(45, 35));
        searchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFieldActionPerformed(evt);
            }
        });

        searchButton.setLabel("Rechercher");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        label15.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        label15.setFont(new java.awt.Font("Laksaman", 1, 18)); // NOI18N
        label15.setText("Contacts enregistrés en base de données");

        creerRepertoire.setText("Quitter");
        creerRepertoire.setActionCommand("Sauvegarder le repertoire");
        creerRepertoire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creerRepertoireActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"12er", "Pacome", "692397042", "fdsfsdf"}
            },
            new String [] {
                "code", "Nom", "Telephone", "Email"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setColumnSelectionAllowed(true);
        jTable1.setInheritsPopupMenu(true);
        jTable1.setMinimumSize(new java.awt.Dimension(480, 580));
        jScrollPane1.setViewportView(jTable1);

        searchOption.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CODE", "NOM", "EMAIL", "TELEPHONE" }));

        creerRepertoire1.setText("Retourner au repertoire");
        creerRepertoire1.setToolTipText("");
        creerRepertoire1.setActionCommand("Rentrer vers le repertoire");
        creerRepertoire1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creerRepertoire1ActionPerformed(evt);
            }
        });

        cancelSearch.setText("Annuler");
        cancelSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(label15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cancelSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchOption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(creerRepertoire1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(creerRepertoire, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1267, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label15, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(searchOption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cancelSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 565, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(creerRepertoire, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(creerRepertoire1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(99, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 518, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(62, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchFieldActionPerformed

    private void creerRepertoireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creerRepertoireActionPerformed
        // TODO add your handling code here:
        int response = JOptionPane.showConfirmDialog(new JFrame(), "Voulez vous vraiment quitter l'application ?", "Quitter l'application", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        if (response == JOptionPane.YES_OPTION) {
            mainFrameApplication.dispose();
            this.dispose();
        }

    }//GEN-LAST:event_creerRepertoireActionPerformed

    private void creerRepertoire1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creerRepertoire1ActionPerformed
        // TODO add your handling code here:

        this.mainFrameApplication.loadTableContent(repertoirePrincipal.getContacts());
        this.mainFrameApplication.setVisible(true);

        this.dispose();

    }//GEN-LAST:event_creerRepertoire1ActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed

        // TODO add your handling code here:
        
        cancelSearch.setVisible(true);
        String option = (String) searchOption.getSelectedItem();
        loadTableContent(repertoirePrincipal.rechercherContact(EnumsBuilder.champRechercheEnumFromString(option), searchField.getText(), 2));
    }//GEN-LAST:event_searchButtonActionPerformed

    private void cancelSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelSearchActionPerformed
        // TODO add your handling code here:
        
        loadTableContent(repertoirePrincipal.getContacts());
        cancelSearch.setVisible(false);
    }//GEN-LAST:event_cancelSearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelSearch;
    private javax.swing.JButton creerRepertoire;
    private javax.swing.JButton creerRepertoire1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private java.awt.Label label15;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchField;
    private javax.swing.JComboBox<String> searchOption;
    // End of variables declaration//GEN-END:variables
}
