/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package screens;

import core.entities.Contact;
import core.entities.Repertoire;
import core.helpers.tools.Database;
import core.helpers.tools.EnumsBuilder;
import core.helpers.tools.ErrorMessages;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.List;

/**
 * @author pacome
 */
public class MainFrameApplication extends javax.swing.JFrame {

    /**
     * Creates new form MainFrameApplication
     */
    private final Connection dbConnection;
    private Repertoire repertoire;

    public MainFrameApplication(Connection connection) {
        dbConnection = connection;
        repertoire = new Repertoire();
        initComponents();
        loadTableContent(repertoire.getContacts());
    }

    public void loadTableContent(List<Contact> contacts) {
        DefaultTableModel tableModel = new DefaultTableModel();
        tableModel.addColumn("Code");
        tableModel.addColumn("Nom");
        tableModel.addColumn("Date de Naissance");

        tableModel.addColumn("Telephone");
        tableModel.addColumn("Email");
        tableModel.addColumn("Adresse");

        contacts.stream()
                .forEach(contact -> tableModel.addRow(new Object[]{contact.getCode(), contact.getNom(), contact.getDateNaissance().toString(), contact.getTelNumber(), contact.getEmail(), contact.getAddress()}));

        jTable1.setModel(tableModel);
    }

    public Repertoire getRepertoire() {
        return repertoire;
    }

    private void showError(String title, String message) {
        JOptionPane.showConfirmDialog(new JFrame(), message, title, JOptionPane.ERROR_MESSAGE);
    }

    public static void showErrorStatic(String title, String message) {
        JOptionPane.showConfirmDialog(new JFrame(), message, title, JOptionPane.ERROR_MESSAGE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label15 = new java.awt.Label();
        creerRepertoire = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        creerRepertoire2 = new javax.swing.JButton();
        searchButton = new javax.swing.JButton();
        searchField = new javax.swing.JTextField();
        searchOption = new javax.swing.JComboBox<>();
        cancelSearch = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        label15.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        label15.setFont(new java.awt.Font("Laksaman", 1, 18)); // NOI18N
        label15.setText("Nouveau repertoire");

        creerRepertoire.setText("Ajouter un Contact");
        creerRepertoire.setActionCommand("Sauvegarder le repertoire");
        creerRepertoire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creerRepertoireActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"12er", "Pacome", "692397042", "fdsfsdf"}
            },
            new String [] {
                "code", "Nom", "Telephone", "Email"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setColumnSelectionAllowed(true);
        jTable1.setInheritsPopupMenu(true);
        jTable1.setMinimumSize(new java.awt.Dimension(480, 580));
        jScrollPane1.setViewportView(jTable1);

        creerRepertoire2.setText("Liste des contacts enregistrés en base de données");
        creerRepertoire2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creerRepertoire2ActionPerformed(evt);
            }
        });

        searchButton.setLabel("Rechercher");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        searchField.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        searchField.setMinimumSize(new java.awt.Dimension(45, 35));
        searchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFieldActionPerformed(evt);
            }
        });

        searchOption.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CODE", "NOM", "EMAIL", "TELEPHONE" }));

        cancelSearch.setText("Annuler");
        cancelSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelSearchActionPerformed(evt);
            }
        });

        jMenu1.setText("Fichier");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        jMenuItem1.setText("Enregister");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Quitter");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(creerRepertoire2)
                .addGap(69, 69, 69)
                .addComponent(creerRepertoire, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(label15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(cancelSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchOption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1078, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label15, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(searchOption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cancelSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 540, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(creerRepertoire, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(creerRepertoire2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(86, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 518, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(50, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void creerRepertoireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creerRepertoireActionPerformed
        // TODO add your handling code here:

        this.setVisible(false);
        new CreerContact(this).setVisible(true);
    }//GEN-LAST:event_creerRepertoireActionPerformed

    private void creerRepertoire2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creerRepertoire2ActionPerformed

        // Naviguer vers la liste des contacts
        // ouvrir la fenetre des contacts
        new ListeContacts(dbConnection, this).setVisible(true);

        // fermer la fenetre actuelle
        this.setVisible(false);

    }//GEN-LAST:event_creerRepertoire2ActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed

        // TODO add your handling code here:
        cancelSearch.setVisible(true);
        String option = (String) searchOption.getSelectedItem();
        loadTableContent(repertoire.rechercherContact(EnumsBuilder.champRechercheEnumFromString(option), searchField.getText(), 2));
    }//GEN-LAST:event_searchButtonActionPerformed

    private void searchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchFieldActionPerformed

    private void cancelSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelSearchActionPerformed
        // TODO add your handling code here:

        loadTableContent(repertoire.getContacts());
        cancelSearch.setVisible(false);
    }//GEN-LAST:event_cancelSearchActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        repertoire.getContacts().stream().forEach(
                contact -> {
                    try {
                        contact.getRepository().save(contact);
                    } catch (SQLException e) {
                        showErrorStatic("Erreur à l'insertion des données", "Une erreur est survenue lors de l'enregisterement");
                    }
                }
        );

        JOptionPane.showConfirmDialog(new JFrame(), "Success", "Le repertoire a été sauvegardé avec succes\nNous vidons le repertoire.\nVous pouvez consulter les contacts enregistrés en cliquant en bas (bouton d'action)", JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed

    }//GEN-LAST:event_jMenu1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrameApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrameApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrameApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrameApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        int port = 3306;
        if (args.length > 0) {
            try {
                port = Integer.parseInt(args[0]);
            } catch (NumberFormatException e) {
                showErrorStatic("Arguments Invalides", ErrorMessages.InvalidArgsErrorMessage);
                port = 3306;
            }
        }

        /* Create and display the form only if database connection is made with success*/
        // initialiser la connection à la base de donnée.
        Connection finalConnection = Database.initializeDatabaseConnection("adress_book", "root", "", port);
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                if (finalConnection != null) {
                    new MainFrameApplication(finalConnection).setVisible(true);
                } else {
                    showErrorStatic("Erreur de base de donnée", ErrorMessages.SQLErrorMessage);
                }
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelSearch;
    private javax.swing.JButton creerRepertoire;
    private javax.swing.JButton creerRepertoire2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private java.awt.Label label15;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchField;
    private javax.swing.JComboBox<String> searchOption;
    // End of variables declaration//GEN-END:variables
}
